// Generated from DSL.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class DSLLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly STRING = 23;
	public static readonly COLOR = 24;
	public static readonly ID = 25;
	public static readonly NUMBER = 26;
	public static readonly WS = 27;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "STRING", "COLOR", "ID", 
		"NUMBER", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'circle'", "'at'", "'radius'", "'rectangle'", "'width'", "'height'", 
		"'triangle'", "'size'", "'dot'", "'text'", "'move'", "'to'", "'fadein'", 
		"'fadeout'", "'scale'", "'id='", "'('", "','", "')'", "'color'", "'duration'", 
		"'s'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "STRING", "COLOR", "ID", "NUMBER", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(DSLLexer._LITERAL_NAMES, DSLLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return DSLLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(DSLLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "DSL.g4"; }

	// @Override
	public get ruleNames(): string[] { return DSLLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return DSLLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return DSLLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return DSLLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1D\xFC\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03" +
		"\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03" +
		"\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03" +
		"\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03" +
		"\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10" +
		"\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12" +
		"\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15" +
		"\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x07\x18" +
		"\xB5\n\x18\f\x18\x0E\x18\xB8\v\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x05\x19\xDD\n\x19\x03\x1A\x03\x1A\x07\x1A" +
		"\xE1\n\x1A\f\x1A\x0E\x1A\xE4\v\x1A\x03\x1B\x05\x1B\xE7\n\x1B\x03\x1B\x06" +
		"\x1B\xEA\n\x1B\r\x1B\x0E\x1B\xEB\x03\x1B\x03\x1B\x06\x1B\xF0\n\x1B\r\x1B" +
		"\x0E\x1B\xF1\x05\x1B\xF4\n\x1B\x03\x1C\x06\x1C\xF7\n\x1C\r\x1C\x0E\x1C" +
		"\xF8\x03\x1C\x03\x1C\x02\x02\x02\x1D\x03\x02\x03\x05\x02\x04\x07\x02\x05" +
		"\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17" +
		"\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13" +
		"%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02" +
		"\x1B5\x02\x1C7\x02\x1D\x03\x02\x07\x04\x02$$^^\x05\x02C\\aac|\x06\x02" +
		"2;C\\aac|\x03\x022;\x05\x02\v\f\x0F\x0F\"\"\x02\u0109\x02\x03\x03\x02" +
		"\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02" +
		"\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02" +
		"\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02" +
		"\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02" +
		"\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02" +
		"\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02" +
		")\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
		"\x027\x03\x02\x02\x02\x039\x03\x02\x02\x02\x05@\x03\x02\x02\x02\x07C\x03" +
		"\x02\x02\x02\tJ\x03\x02\x02\x02\vT\x03\x02\x02\x02\rZ\x03\x02\x02\x02" +
		"\x0Fa\x03\x02\x02\x02\x11j\x03\x02\x02\x02\x13o\x03\x02\x02\x02\x15s\x03" +
		"\x02\x02\x02\x17x\x03\x02\x02\x02\x19}\x03\x02\x02\x02\x1B\x80\x03\x02" +
		"\x02\x02\x1D\x87\x03\x02\x02\x02\x1F\x8F\x03\x02\x02\x02!\x95\x03\x02" +
		"\x02\x02#\x99\x03\x02\x02\x02%\x9B\x03\x02\x02\x02\'\x9D\x03\x02\x02\x02" +
		")\x9F\x03\x02\x02\x02+\xA5\x03\x02\x02\x02-\xAE\x03\x02\x02\x02/\xB0\x03" +
		"\x02\x02\x021\xDC\x03\x02\x02\x023\xDE\x03\x02\x02\x025\xE6\x03\x02\x02" +
		"\x027\xF6\x03\x02\x02\x029:\x07e\x02\x02:;\x07k\x02\x02;<\x07t\x02\x02" +
		"<=\x07e\x02\x02=>\x07n\x02\x02>?\x07g\x02\x02?\x04\x03\x02\x02\x02@A\x07" +
		"c\x02\x02AB\x07v\x02\x02B\x06\x03\x02\x02\x02CD\x07t\x02\x02DE\x07c\x02" +
		"\x02EF\x07f\x02\x02FG\x07k\x02\x02GH\x07w\x02\x02HI\x07u\x02\x02I\b\x03" +
		"\x02\x02\x02JK\x07t\x02\x02KL\x07g\x02\x02LM\x07e\x02\x02MN\x07v\x02\x02" +
		"NO\x07c\x02\x02OP\x07p\x02\x02PQ\x07i\x02\x02QR\x07n\x02\x02RS\x07g\x02" +
		"\x02S\n\x03\x02\x02\x02TU\x07y\x02\x02UV\x07k\x02\x02VW\x07f\x02\x02W" +
		"X\x07v\x02\x02XY\x07j\x02\x02Y\f\x03\x02\x02\x02Z[\x07j\x02\x02[\\\x07" +
		"g\x02\x02\\]\x07k\x02\x02]^\x07i\x02\x02^_\x07j\x02\x02_`\x07v\x02\x02" +
		"`\x0E\x03\x02\x02\x02ab\x07v\x02\x02bc\x07t\x02\x02cd\x07k\x02\x02de\x07" +
		"c\x02\x02ef\x07p\x02\x02fg\x07i\x02\x02gh\x07n\x02\x02hi\x07g\x02\x02" +
		"i\x10\x03\x02\x02\x02jk\x07u\x02\x02kl\x07k\x02\x02lm\x07|\x02\x02mn\x07" +
		"g\x02\x02n\x12\x03\x02\x02\x02op\x07f\x02\x02pq\x07q\x02\x02qr\x07v\x02" +
		"\x02r\x14\x03\x02\x02\x02st\x07v\x02\x02tu\x07g\x02\x02uv\x07z\x02\x02" +
		"vw\x07v\x02\x02w\x16\x03\x02\x02\x02xy\x07o\x02\x02yz\x07q\x02\x02z{\x07" +
		"x\x02\x02{|\x07g\x02\x02|\x18\x03\x02\x02\x02}~\x07v\x02\x02~\x7F\x07" +
		"q\x02\x02\x7F\x1A\x03\x02\x02\x02\x80\x81\x07h\x02\x02\x81\x82\x07c\x02" +
		"\x02\x82\x83\x07f\x02\x02\x83\x84\x07g\x02\x02\x84\x85\x07k\x02\x02\x85" +
		"\x86\x07p\x02\x02\x86\x1C\x03\x02\x02\x02\x87\x88\x07h\x02\x02\x88\x89" +
		"\x07c\x02\x02\x89\x8A\x07f\x02\x02\x8A\x8B\x07g\x02\x02\x8B\x8C\x07q\x02" +
		"\x02\x8C\x8D\x07w\x02\x02\x8D\x8E\x07v\x02\x02\x8E\x1E\x03\x02\x02\x02" +
		"\x8F\x90\x07u\x02\x02\x90\x91\x07e\x02\x02\x91\x92\x07c\x02\x02\x92\x93" +
		"\x07n\x02\x02\x93\x94\x07g\x02\x02\x94 \x03\x02\x02\x02\x95\x96\x07k\x02" +
		"\x02\x96\x97\x07f\x02\x02\x97\x98\x07?\x02\x02\x98\"\x03\x02\x02\x02\x99" +
		"\x9A\x07*\x02\x02\x9A$\x03\x02\x02\x02\x9B\x9C\x07.\x02\x02\x9C&\x03\x02" +
		"\x02\x02\x9D\x9E\x07+\x02\x02\x9E(\x03\x02\x02\x02\x9F\xA0\x07e\x02\x02" +
		"\xA0\xA1\x07q\x02\x02\xA1\xA2\x07n\x02\x02\xA2\xA3\x07q\x02\x02\xA3\xA4" +
		"\x07t\x02\x02\xA4*\x03\x02\x02\x02\xA5\xA6\x07f\x02\x02\xA6\xA7\x07w\x02" +
		"\x02\xA7\xA8\x07t\x02\x02\xA8\xA9\x07c\x02\x02\xA9\xAA\x07v\x02\x02\xAA" +
		"\xAB\x07k\x02\x02\xAB\xAC\x07q\x02\x02\xAC\xAD\x07p\x02\x02\xAD,\x03\x02" +
		"\x02\x02\xAE\xAF\x07u\x02\x02\xAF.\x03\x02\x02\x02\xB0\xB6\x07$\x02\x02" +
		"\xB1\xB5\n\x02\x02\x02\xB2\xB3\x07^\x02\x02\xB3\xB5\v\x02\x02\x02\xB4" +
		"\xB1\x03\x02\x02\x02\xB4\xB2\x03\x02\x02\x02\xB5\xB8\x03\x02\x02\x02\xB6" +
		"\xB4\x03\x02\x02\x02\xB6\xB7\x03\x02\x02\x02\xB7\xB9\x03\x02\x02\x02\xB8" +
		"\xB6\x03\x02\x02\x02\xB9\xBA\x07$\x02\x02\xBA0\x03\x02\x02\x02\xBB\xBC" +
		"\x07t\x02\x02\xBC\xBD\x07g\x02\x02\xBD\xDD\x07f\x02\x02\xBE\xBF\x07i\x02" +
		"\x02\xBF\xC0\x07t\x02\x02\xC0\xC1\x07g\x02\x02\xC1\xC2\x07g\x02\x02\xC2" +
		"\xDD\x07p\x02\x02\xC3\xC4\x07d\x02\x02\xC4\xC5\x07n\x02\x02\xC5\xC6\x07" +
		"w\x02\x02\xC6\xDD\x07g\x02\x02\xC7\xC8\x07{\x02\x02\xC8\xC9\x07g\x02\x02" +
		"\xC9\xCA\x07n\x02\x02\xCA\xCB\x07n\x02\x02\xCB\xCC\x07q\x02\x02\xCC\xDD" +
		"\x07y\x02\x02\xCD\xCE\x07d\x02\x02\xCE\xCF\x07t\x02\x02\xCF\xD0\x07q\x02" +
		"\x02\xD0\xD1\x07y\x02\x02\xD1\xDD\x07p\x02\x02\xD2\xD3\x07d\x02\x02\xD3" +
		"\xD4\x07n\x02\x02\xD4\xD5\x07c\x02\x02\xD5\xD6\x07e\x02\x02\xD6\xDD\x07" +
		"m\x02\x02\xD7\xD8\x07y\x02\x02\xD8\xD9\x07j\x02\x02\xD9\xDA\x07k\x02\x02" +
		"\xDA\xDB\x07v\x02\x02\xDB\xDD\x07g\x02\x02\xDC\xBB\x03\x02\x02\x02\xDC" +
		"\xBE\x03\x02\x02\x02\xDC\xC3\x03\x02\x02\x02\xDC\xC7\x03\x02\x02\x02\xDC" +
		"\xCD\x03\x02\x02\x02\xDC\xD2\x03\x02\x02\x02\xDC\xD7\x03\x02\x02\x02\xDD" +
		"2\x03\x02\x02\x02\xDE\xE2\t\x03\x02\x02\xDF\xE1\t\x04\x02\x02\xE0\xDF" +
		"\x03\x02\x02\x02\xE1\xE4\x03\x02\x02\x02\xE2\xE0\x03\x02\x02\x02\xE2\xE3" +
		"\x03\x02\x02\x02\xE34\x03\x02\x02\x02\xE4\xE2\x03\x02\x02\x02\xE5\xE7" +
		"\x07/\x02\x02\xE6\xE5\x03\x02\x02\x02\xE6\xE7\x03\x02\x02\x02\xE7\xE9" +
		"\x03\x02\x02\x02\xE8\xEA\t\x05\x02\x02\xE9\xE8\x03\x02\x02\x02\xEA\xEB" +
		"\x03\x02\x02\x02\xEB\xE9\x03\x02\x02\x02\xEB\xEC\x03\x02\x02\x02\xEC\xF3" +
		"\x03\x02\x02\x02\xED\xEF\x070\x02\x02\xEE\xF0\t\x05\x02\x02\xEF\xEE\x03" +
		"\x02\x02\x02\xF0\xF1\x03\x02\x02\x02\xF1\xEF\x03\x02\x02\x02\xF1\xF2\x03" +
		"\x02\x02\x02\xF2\xF4\x03\x02\x02\x02\xF3\xED\x03\x02\x02\x02\xF3\xF4\x03" +
		"\x02\x02\x02\xF46\x03\x02\x02\x02\xF5\xF7\t\x06\x02\x02\xF6\xF5\x03\x02" +
		"\x02\x02\xF7\xF8\x03\x02\x02\x02\xF8\xF6\x03\x02\x02\x02\xF8\xF9\x03\x02" +
		"\x02\x02\xF9\xFA\x03\x02\x02\x02\xFA\xFB\b\x1C\x02\x02\xFB8\x03\x02\x02" +
		"\x02\f\x02\xB4\xB6\xDC\xE2\xE6\xEB\xF1\xF3\xF8\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!DSLLexer.__ATN) {
			DSLLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(DSLLexer._serializedATN));
		}

		return DSLLexer.__ATN;
	}

}

